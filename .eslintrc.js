module.exports = {
    env: {
        browser: true,
        es2021: true,
        jest: true,
    },
    extends: ['plugin:@next/next/recommended', 'plugin:react/recommended', 'airbnb', 'prettier'],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaFeatures: {
            jsx: true,
        },
        ecmaVersion: 'latest',
        sourceType: 'module',
    },
    plugins: [
        'react',
        '@typescript-eslint',
        'typescript-sort-keys',
        // 'unused-imports',
        'prettier',
        'prefer-arrow',
        'sort-class-members',
    ],
    rules: {
        '@typescript-eslint/no-unused-vars': 'error',
        // '@typescript-eslint/no-unused-vars': 'off',
        'import/extensions': 'off',
        'import/no-extraneous-dependencies': 'off',
        'import/no-unresolved': 'off',
        'import/prefer-default-export': 'off',
        'no-nested-ternary': 'off',
        'no-plusplus': 'off',
        'no-unused-vars': 'off',
        'no-use-before-define': 'off',
        'prettier/prettier': 'error',
        'react/destructuring-assignment': 'off',
        'react/function-component-definition': 'off',
        'react/jsx-filename-extension': 'off',
        'react/jsx-props-no-spreading': 'off',
        'react/require-default-props': 'off',
        'react/react-in-jsx-scope': 'off',
        'typescript-sort-keys/interface': 'error',
        'typescript-sort-keys/string-enum': 'error',
        // 'unused-imports/no-unused-imports': 'error', // This removes unused imports automatically, which is not always what you want.
        'prefer-arrow/prefer-arrow-functions': [
            'error',
            {
                disallowPrototype: true,
                singleReturnOnly: true,
                classPropertiesAllowed: false,
            },
        ],
        'sort-class-members/sort-class-members': [
            'error',
            {
                order: [
                    '[static-properties]',
                    '[properties]',
                    '[conventional-private-properties]',
                    'constructor',
                    '[static-methods]',
                    '[methods]',
                    '[conventional-private-methods]',
                ],
                accessorPairPositioning: 'getThenSet',
            },
        ],
        'import/no-dynamic-require': 'off',
        'consistent-return': 'off',
        'no-param-reassign': 'off',
        'global-require': 'off',
    },
};
